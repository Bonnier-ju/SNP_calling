#!/bin/bash
#SBATCH -p workq
#SBATCH --time=01:00:00 #job time limit
#SBATCH -J 03-analysis_mapping_results #job name
#SBATCH -o /work/user/jbonnier/Dicorynia/full_workflow/00-batch_scripts/output/output-%x-%j.out #output file name
#SBATCH -e /work/user/jbonnier/Dicorynia/full_workflow/00-batch_scripts/error/error-%x-%j.out #error file name
#SBATCH --mem=10G #memory reservation
#SBATCH --cpus-per-task=4 #ncpu on the same node
#SBATCH --mail-user=julien.bonnier@ecofog.gf 
#SBATCH --mail-type=END,FAIL


#Clean work place 
module purge 

#Loading modules 
module load bioinfo/samtools/1.19
module load devel/python/Python-3.11.1
module load bioinfo/bedtools/2.30.0


#Define destination folders
DEST_DIR=~/work/Dicorynia/full_workflow/03-mapping/03-flagstat_files/
BED_DIR=~/work/Dicorynia/full_workflow/03-mapping/03-bed_files/
STATS_DIR=~/work/Dicorynia/full_workflow/03-mapping/03-bed_analysis/


###Alignment flagstat analysis###
#Performs QC quality control 
#Gives number of primary, secondary, additional, duplicate reads
#number of reads mapper etc

#Move to mapping results folder 
cd ~/work/Dicorynia/full_workflow/03-mapping/

#Calculate and display various statistics summarizing the information contained in the FLAG fields of the BAM file. 
#These statistics include the number of mapped, unmapped and duplicated reads, etc.

for bamFile in *.bam
do
    # Processing flagstats analysis
    samtools flagstat "$bamFile" > "${DEST_DIR}/${bamFile}_flagstat.txt" 
done

echo "End of flagstat analysis"


#Converting BAM files to BED files
cd ~/work/Dicorynia/full_workflow/03-mapping/

for bamFile in *.bam
do
    bedFile="${BED_DIR}/$(basename "${bamFile%.*}").bed"
    echo "Conversion de $bamFile en format BED"
    bedtools bamtobed -i "$bamFile" > "$bedFile"
done

echo "End of converting BAM files to BED files" 


# Simple analysis - compting read in each region 
# Give number of reads in each super-scaffold 

cd ~/work/Dicorynia/test_subsamples/align_subsamples/

for bedFile in "$BED_DIR"/*.bed; do
    statsFile="${STATS_DIR}/$(basename "${bedFile%.*}")_stats.txt"
    echo "Calcul des statistiques pour $bedFile"
    cut -f1 "$bedFile" | sort | uniq -c > "$statsFile"
done

echo "End of bed files statistics processing and end of scripts processing : well done !" 
